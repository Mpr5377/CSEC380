What is the URL of your Github project?

https://github.com/M507/CSEC380




How did you breakup your projects and what are the security ramifications?

We are planning to push our project to Github, which will allow us to keep track of the changes and resort the code when needed. Another solution we are planning to approach is by backing up our code on each of our laptops, after every sprint. Finally, one of us will be required to back up the project on Google drive. We think it's a good idea since it's just a school project and Google would not be interested in reviewing our source code, and use it somehow. It would be a safe place for a school project like this. Thus, we are storing our project in 3 different places. Since Github, all our Laptops, and Google driver uses username and password to access the project files, breaking the confidentiality of this backup system is hard. To ensure the integrity of the code, we are planning to check the project's checksum after we zip every backup. And again, to ensure the accessibility, we are placing the source code in different safe places.




How long did you assign each sprint to be?

Each of our sprints is two weeks long. We chose it to be two weeks long because we believe that each sprint should focus on one part. And the longest time that would take to finish just one part of the project estimated to be a week and a half.



Did you deviate from the Agile methodology at all? If yes, what is your reasoning for this?

We did not deviate from the Agile methodology. We will be using 'Github Issues/Labels' for our 'Epics', 'Github Milestones' for our 'Sprints', and 'Github Issues' for our 'User Stories' as required.




How do you ensure that after each issue/milestone that security has been verified? How would you identify such issues in an ideal environment?

As a team, we will be testing each technological part of the project after finishing each part. In addition to that, at the end of the project, each member has been assigned to verify that each section is working and secure. After verifying that an issue is working and secure by the member responsible, the issue will be closed. The performed tests would help to find simple vulnerabilities. In an ideal environment, we would think that there is a team that would pentest the infrastructure to find issues.




How did you choose to break down your Epic into various issues (tasks)?

After we read each Epic, we created issues based off of them. We chose to break them down into sparse issues, and each issue is a task that should be completed in a section. Then we tasked these issues to each member of the group.
